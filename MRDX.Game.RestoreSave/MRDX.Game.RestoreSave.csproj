<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net7.0-windows</TargetFramework>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <LangVersion>10.0</LangVersion>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
        <OutputPath>$(RELOADEDIIMODS)/MRDX.Game.RestoreSave</OutputPath>
        <ImplicitUsings>enable</ImplicitUsings>

        <!-- IL Trimming Support for Framework Dependent Apps. Unofficial.
             If you set this to true, trimming will be enabled when you publish the mod.
             Test trimming with: `BuildLinked.ps1` in PowerShell. -->
        <ReloadedILLink>false</ReloadedILLink>
        <!-- Use a default version for development -->
        <Version Condition="'$(Version)' == ''">9.9.9.9</Version>
        <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">9.9.9.9</AssemblyVersion>
        <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
    </PropertyGroup>

    <ItemGroup>
        <TrimmerRootAssembly Include="Avalonia.Themes.Fluent" />
    </ItemGroup>

    <ItemGroup>
        <ReloadedLinkRoots Include="MRDX.Game.RestoreSave" />
        <!-- Add assemblies to be trimmed. You might need to add their dependencies too!  -->
        <!-- <ReloadedLinkAssemblies Include="Reloaded.Memory" /> -->
    </ItemGroup>

    <Import Project="Reloaded.Trimming.targets" />
    <Import Project="Reloaded.Checks.targets" />

    <ItemGroup>
        <None Update="ModConfig.json" CopyToOutputDirectory="Always" />
        <None Update="Preview.png" CopyToOutputDirectory="PreserveNewest" />
        <None Remove="Publish.ps1" />
        <None Remove="BuildLinked.ps1" />
        <None Remove="Reloaded.Trimming.targets" />
        <None Remove="Reloaded.Checks.targets" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.0.0-rc2.2" />
        <PackageReference Include="Avalonia.Desktop" Version="11.0.0-rc2.2" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.0-rc2.2" />
        <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.0-rc2.2" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.0-rc2.2" />
        <PackageReference Include="Reloaded.Mod.Interfaces" Version="2.4.0" />
        <PackageReference Include="Reloaded.SharedLib.Hooks" Version="1.9.0" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\MRDX.Base.Mod.Interfaces\MRDX.Base.Mod.Interfaces.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Compile Update="UI\App.axaml.cs">
            <DependentUpon>App.axaml</DependentUpon>
            <SubType>Code</SubType>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <AdditionalFiles Include="UI\App.axaml" />
    </ItemGroup>

    <Target Name="Replace" BeforeTargets="BeforeBuild;BeforeRebuild">
        <PropertyGroup>
            <InputFile>ModConfig.template.json</InputFile>
            <OutputFile>ModConfig.json</OutputFile>
        </PropertyGroup>
        <WriteLinesToFile File="$(OutputFile)" Lines="$([System.IO.File]::ReadAllText($(InputFile)).Replace('{{ MOD_VERSION }}','$(Version)'))" Overwrite="true" />
    </Target>
</Project>
